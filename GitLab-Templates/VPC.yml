---
Description: GitLab Networking Stack

Parameters:
  BastionKeyName:
    Type: String
    Default: GitLab
    Description: Enter keyname for Bastion instance access.
  IPWhiteList:
    Type: String
    Description: IP range allowed to SSH into Bastion

Resources:
###
# VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.33.0.0/18
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: GitLab VPC

###
# Subnets
##
# Public Subnets
  PublicA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.33.10.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: GitLab Public Subnet A
      VpcId:
        Ref: VPC

  PublicB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.33.11.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: GitLab Public Subnet B
      VpcId:
        Ref: VPC

  PublicC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: 10.33.12.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: GitLab Public Subnet C
      VpcId:
        Ref: VPC

##
# Private Subnets
  PrivateA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.33.20.0/24
      Tags:
      - Key: Name
        Value: GitLab Private Subnet A
      VpcId:
        Ref: VPC

  PrivateB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.33.21.0/24
      Tags:
      - Key: Name
        Value: GitLab Private Subnet B
      VpcId:
        Ref: VPC

  PrivateC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: 10.33.22.0/24
      Tags:
      - Key: Name
        Value: GitLab Priate Subnet C
      VpcId:
        Ref: VPC

##
# Database Subnets
  DatabaseA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.33.30.0/24
      Tags:
      - Key: Name
        Value: GitLab Database Subnet A
      VpcId:
        Ref: VPC

  DatabaseB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.33.31.0/24
      Tags:
      - Key: Name
        Value: GitLab Database Subnet B
      VpcId:
        Ref: VPC

  DatabaseC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: 10.33.32.0/24
      Tags:
      - Key: Name
        Value: GitLab Database Subnet C
      VpcId:
        Ref: VPC

###
# Network ACLs
  DatabaseACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: GitLab Database ACL

##
# Network ACL Entries
##
# Ephemeral Ports
  EmphemeralACLEntryA:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 500
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 10.33.20.0/24
      PortRange:
        From: 32768
        To: 61000

  EmphemeralACLEntryB:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 510
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 10.33.21.0/24
      PortRange:
        From: 32768
        To: 61000

  EmphemeralACLEntryC:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 520
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 10.33.22.0/24
      PortRange:
        From: 32768
        To: 61000

##
# Postgres
  PostgresqlACLEntryA:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 200
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.33.20.0/24
      PortRange:
        From: 5432
        To: 5432

  PostgresqlACLEntryB:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 210
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.33.21.0/24
      PortRange:
        From: 5432
        To: 5432

  PostgresqlACLEntryC:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 220
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.33.22.0/24
      PortRange:
        From: 5432
        To: 5432

##
# Redis
  RedisACLEntryA:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 300
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.33.20.0/24
      PortRange:
        From: 6379
        To: 6379

  RedisACLEntryB:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 310
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.33.21.0/24
      PortRange:
        From: 6379
        To: 6379

  RedisACLEntryC:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: DatabaseACL
      RuleNumber: 320
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.33.22.0/24
      PortRange:
        From: 6379
        To: 6379

##
# Network ACL Associations
  DatabaseACLAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: DatabaseA
      NetworkAclId:
        Ref: DatabaseACL

  DatabaseACLAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: DatabaseB
      NetworkAclId:
        Ref: DatabaseACL

  DatabaseACLAssociationC:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: DatabaseC
      NetworkAclId:
        Ref: DatabaseACL

###
# Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: GitLab Public Route Table

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: GitLab Private Route Table A

  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: GitLab Private Route Table B

  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: GitLab Private Route Table C

###
# Route Table Associations
##
# Public
  PublicARouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicA
      RouteTableId:
        Ref: PublicRouteTable

  PublicBRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicB
      RouteTableId:
        Ref: PublicRouteTable

  PublicCRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicC
      RouteTableId:
        Ref: PublicRouteTable

##
# Private
  PrivateARouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateA
      RouteTableId:
        Ref: PrivateRouteTableA

  PrivateBRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateB
      RouteTableId:
        Ref: PrivateRouteTableB

  PrivateCRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateC
      RouteTableId:
        Ref: PrivateRouteTableC

###
# Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: GitLab Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

###
# NAT Gateways
  NATA:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATAEIP
        - AllocationId
      SubnetId:
        Ref: PublicA

  NATAEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATA

  NATB:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATBEIP
        - AllocationId
      SubnetId:
        Ref: PublicB

  NATBEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATB

  NATC:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATCEIP
        - AllocationId
      SubnetId:
        Ref: PublicC

  NATCEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATRouteC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATC

###
# Security Groups
##
# Bastion Security Group
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access to Bastion
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Ref: IPWhiteList
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: GitLab Bastion Security Group
##
# Private Instance Security Group
  PrivateInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows Private instances HTTP/HTTPS access out
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId:
          Ref: BastionSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: GitLab Private Instance Security Group
###
# Bastion Instance
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-dba02dbb # TODO: Find by map
      SecurityGroupIds:
      - Ref: BastionSecurityGroup
      SubnetId:
        Ref: PublicA
      InstanceType: t2.micro
      KeyName:
        Ref: BastionKeyName
      Tags:
      - Key: Name
        Value: GitLab Bastion

Outputs:
  BastionIP:
    Description: Public IP of the SSH Bastion
    Value:
      Fn::GetAtt: BastionInstance.PublicIp

  VPCID:
    Description: The ID of the VPC
    Value:
      Ref: VPC
    Export:
      Name: GitLab-VPC

  PublicA:
    Description: The ID of the Public A Subnet
    Value:
      Ref: PublicA
    Export:
      Name: GitLab-Public-A

  PublicB:
    Description: The ID of the Public B Subnet
    Value:
      Ref: PublicB
    Export:
      Name: GitLab-Public-B

  PublicC:
    Description: The ID of the Public C Subnet
    Value:
      Ref: PublicC
    Export:
      Name: GitLab-Public-C

  PrivateA:
    Description: The ID of the Private A Subnet
    Value:
      Ref: PrivateA
    Export:
      Name: GitLab-Private-A

  PrivateB:
    Description: The ID of the Private B Subnet
    Value:
      Ref: PrivateB
    Export:
      Name: GitLab-Private-B

  PrivateC:
    Description: The ID of the Private C Subnet
    Value:
      Ref: PrivateC
    Export:
      Name: GitLab-Private-C

  DatabaseA:
    Description: The ID of the Database A Subnet
    Value:
      Ref: DatabaseA
    Export:
      Name: GitLab-Database-A

  DatabaseB:
    Description: The ID of the Database B Subnet
    Value:
      Ref: DatabaseB
    Export:
      Name: GitLab-Database-B

  DatabaseC:
    Description: The ID of the Database C Subnet
    Value:
      Ref: DatabaseC
    Export:
      Name: GitLab-Database-C

  BaseSG:
    Description: Base Private Instance Security Group
    Value:
      Ref: PrivateInstanceSecurityGroup
    Export:
      Name: GitLab-Base-SecurityGroup

  BastionSG:
    Description: Bastion Security Group
    Value:
      Ref: BastionSecurityGroup
    Export:
      Name: GitLab-Bastion-SecurityGroup
      